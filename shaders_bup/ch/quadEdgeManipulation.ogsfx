////////////////////////////////////////////////////////////////////////////////////////////////////
// quadEdgeManipulation.ogsfx (GLSL)
// Brief: Edge manipulation algorithms
// Contributors: Yee Xin Chiew, Santiago Montesdeoca
////////////////////////////////////////////////////////////////////////////////////////////////////
//             _                                      _             _       _   _             
//     ___  __| | __ _  ___     _ __ ___   __ _ _ __ (_)_ __  _   _| | __ _| |_(_) ___  _ __  
//    / _ \/ _` |/ _` |/ _ \   | '_ ` _ \ / _` | '_ \| | '_ \| | | | |/ _` | __| |/ _ \| '_ \ 
//   |  __/ (_| | (_| |  __/   | | | | | | (_| | | | | | |_) | |_| | | (_| | |_| | (_) | | | |
//    \___|\__,_|\__, |\___|   |_| |_| |_|\__,_|_| |_|_| .__/ \__,_|_|\__,_|\__|_|\___/|_| |_|
//               |___/                                 |_|                                    
////////////////////////////////////////////////////////////////////////////////////////////////////
// Edge manipulation effects for charcoal stylization.
////////////////////////////////////////////////////////////////////////////////////////////////////
#include "../include/quadCommon.ogsfh"

// TEXTURES
uniform Texture2D gEdgeBlurControlTex;
uniform Texture2D gControlTex;
uniform Texture2D gBlendTex;
uniform Texture2D gStylizationTex;
uniform Texture2D gEdgeSoftenTex;


// SAMPLERS
uniform sampler2D gEdgeBlurControlTexSampler = sampler_state {
    Texture = <gEdgeBlurControlTex>;
};

uniform sampler2D gControlTexSampler = sampler_state {
    Texture = <gControlTex>;
};

uniform sampler2D gBlendTexSampler = sampler_state {
    Texture = <gBlendTex>;
};

uniform sampler2D gStylizationTexSampler = sampler_state {
    Texture = <gStylizationTex>;
};

uniform sampler2D gEdgeSoftenTexSampler = sampler_state {
    Texture = <gEdgeSoftenTex>;
};



//             _               __ _ _ _            
//     ___  __| | __ _  ___   / _(_) | |_ ___ _ __ 
//    / _ \/ _` |/ _` |/ _ \ | |_| | | __/ _ \ '__|
//   |  __/ (_| | (_| |  __/ |  _| | | ||  __/ |   
//    \___|\__,_|\__, |\___| |_| |_|_|\__\___|_|   
//               |___/                           

// Contributors: Yee Xin Chiew, Santiago Montesdeoca
// Filtering operation for edge softening effect
GLSLShader  edgeBlurFilter {
	void main() {
		ivec2 loc = ivec2(gl_FragCoord.xy);
		
		vec4 stylizationTex = texelFetch(gStylizationTexSampler,loc,0);
		vec4 edgeSoftenTex = texelFetch(gEdgeSoftenTexSampler,loc,0);
		float softenEdges = texelFetch(gEdgeBlurControlTexSampler,loc,0).r;
		
		result = lerp(stylizationTex, edgeSoftenTex, saturate(softenEdges * 3.0));
	}
}



//    _            _           _                       
//   | |_ ___  ___| |__  _ __ (_) __ _ _   _  ___  ___ 
//   | __/ _ \/ __| '_ \| '_ \| |/ _` | | | |/ _ \/ __|
//   | ||  __/ (__| | | | | | | | (_| | |_| |  __/\__ \
//    \__\___|\___|_| |_|_| |_|_|\__, |\__,_|\___||___/
//                                  |_|                
// EDGE SOFTENING EFFECT
technique edgeFilter {
	pass p0 {
        VertexShader(in appDataSampler, out vertexOutputSampler) = quadVertSampler;
        PixelShader(in vertexOutputSampler, out fragmentOutput) = { edgeBlurFilter };
  }
}